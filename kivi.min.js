var kivi={config:{},_store:{},_reportedMap:{},_startingIntervalSeries:[],get:function(a){return this._store[a]},set:function(a,c){if(this.get(a))this.onError(Error("You already set key["+a+"] to ["+this.get(a)+"]."));else if("number"!==typeof c)this.onError(Error("["+a+"]["+c+"] is not a number."));else this._store[a]=c},isReported:function(a){return!!this._reportedMap[a]},_markReported:function(a){this._reportedMap[a]=!0},clear:function(){this._store={};this._reportedMap={}},onError:function(a){console.log(a.message)},
getConfig:function(a){if(this.config[a])return this.config[a];throw Error("You need to set kivi.config."+a);},postKeys:function(){var a=[];this._.each(this._store,function(c,b){this.isReported(b)||a.push(b)},this);return a},postList:function(a){var c=[];a=a||this.postKeys();this._.each(a,function(a){a={key:a,val:this.get(a)};c.push(a)},this);return c},postData:function(a){return this.postList(a)},post:function(){var a=this.getConfig("$"),c=this.getConfig("postUrl");if(a&&c){var b=this.postKeys();
0<b.length&&(this._.each(b,function(a){this._markReported(a)},this),b=this.postData(b),a.ajax({url:c,type:"POST",data:JSON.stringify(b),contentType:"application/json",success:function(){},error:function(a,b,c){console.log("Error posting stats: "+b+" "+c)}}))}},_setTimer:function(){var a=this,c=this._startingIntervalSeries.shift();c&&(this._timer=setTimeout(function(){a.post();a._setTimer()},c))},enablePost:function(a){this._startingIntervalSeries=a||[];this._setTimer()},disablePost:function(){this._startingIntervalSeries=
null;clearTimeout(this._timer)}};(function(){var a=Array.prototype.forEach,c={};kivi._={};kivi._.each=function(b,e,f){if(null!=b)if(a&&b.forEach===a)b.forEach(e,f);else if(b.length===+b.length)for(var d=0,g=b.length;d<g&&!(d in b&&e.call(f,b[d],d,b)===c);d++);else for(d in b)if(hasOwnProperty.call(b,d)&&e.call(f,b[d],d,b)===c)break}})();
